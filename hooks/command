#!/bin/bash
set -uo pipefail

SAMPLE_VAR="hello world"

BASH_VAR=$( docker run --rm -ti -v $PWD:/workdir tmaier/markdown-spellcheck:latest --report "*.md" 2>&1 )
FORMATTED_VAR=$( echo $BASH_VAR | sed 's/\[1m//g;s/\[22m//g;s/\[31m//g;s/\[39m//g' )
#FORMATTED_VAR=$( echo $BASH_VAR | sed 's/\[1m//g;s/\[22m//g;s/\[31m\(.*\)\[39m/\1/g' )

output=()

while read line; do
  mdFile=$(echo $line | sed -e 's/.*\[1m\(.*\)\[22m.*/\1/')
  foundError=$(echo $line | sed -e 's/.*\[31m\(.*\)\[39m.*/\1/')

  if [[ "${mdFile: -3}" == ".md" ]]; then
    output+=("File $mdFile:")
  fi

  # foundError=$(echo $line | sed -e 's/.*\[31m\(.*\)\[39m.*/\1/')

  if [[ -n "$foundError" ]]; then
    echo $line
    output+=("$foundError")
  fi
done <<< $BASH_VAR

NEW_VAR=$(echo "${output[@]}")


echo "Printing the bash vari: $BASH_VAR"
# echo "Printing the formatted vari: $FORMATTED_VAR"
# echo "Printing the sample vari: $SAMPLE_VAR"
#buildkite-agent annotate "<pre class='term'><code>$FORMATTED_VAR</code></pre>" --style "info"
#buildkite-agent annotate "$NEW_VAR" --style "warning"
buildkite-agent annotate "<pre class='term'><code>1 | # Spellchecker <h1>Buildkite</h1> Plugin </code></pre>" --style "info"

